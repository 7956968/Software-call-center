
@{
    ViewBag.Title = "Stations";
}

<div class="row wrapper border-bottom page-heading">
    <div class="col-lg-12">
        <h2>Stations </h2>
        <ol class="breadcrumb">
            <li> <a href="~/home">Home</a> </li>
            <li class="active"> <strong>Stations</strong> </li>
        </ol>
    </div>
    <div class="col-lg-12"> </div>
</div>
<div class="wrapper-content ">
    <div class="row">
        <div class="col-lg-12">
            <div class="alert alert-danger alert-dismissible" role="alert" style="display: none">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
                <strong>Error!</strong> <span v-text="error"></span>. Try to reload the page; or <a class="alert-link" href="#">contact support</a> if the problem persists.
            </div>
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Stations</h5>
                </div>
                <div class="ibox-content collapse in">
                    <div class="widgets-container">
                        <div class="col-md-12">
                            <div class="btn-group">
                                <button class="btn green" v-on:click="create"> Add New  </button>
                            </div>
                        </div>
                        <div>
                            <table id="table" class="display nowrap table responsive nowrap table-striped" cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Consumer</th>
                                        <th>No. of Encoders</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="row in rows">
                                        <td>{{ row.Name          }}</td>
                                        <td>{{ row.Consumer.Name }}</td>
                                        <td>{{ row.onOfEncoders }}</td>
                                        <td>
                                            <button class="btn blue" v-if="row.Id" v-on:click.stop="edit(row.Id)"> View </button>
                                            <button class="btn red"  v-if="row.Id" v-on:click.stop="remove(row.Id)"> Delete </button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/Vendor/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="~/Scripts/Vendor/dataTables.bootstrap.min.js"></script>

    <script>
        new Vue({
            el: '#app',
            data: {
                error: null,
                rows : []
            },
            methods: {
                edit  : function (id) { window.location.href = '/stations/edit/' + id; },
                create: function ()   { window.location.href = '/stations/create'; },
                remove: function (id) { window.location.href = '/stations/delete/' + id; }
            },
            mounted: function () {
                var self = this;

                redfox.get('api/stations').then(function (response) {                            
                    var rows = response.data;
                    for (var i = 0; i < rows.length; i++) {
                        var notifications = JSON.parse(rows[i].Notifications);
                        var Name          = rows[i].Name;
                        var Id            = rows[i].Id;
                        var Consumer      = JSON.parse(rows[i].Consumer);
                        var onOfEncoders  = rows[i].Encoders;

                        self.rows.push({ Name: Name, Consumer: Consumer, onOfEncoders: onOfEncoders, Id: Id });
                    }
                    if (self.rows.length == 0) {
                        self.rows.push({
                            Name: 'No stations defined'
                        });
                    }
                    setTimeout(function () {
                        $('#table').DataTable({
                            dom      : 'rtp',
                            searching: false
                        });
                    }, 1);
                }).catch(function (error) {
                    self.error = error.message;
                })
            }
        });
    </script>
}